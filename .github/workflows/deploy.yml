name: Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  SECRET_KEY: insecure1234567890-=
  DEBU: True
  ALLOWED_HOSTS: localhost 127.0.0.1
  DB_URL: postgres://portfolio:portfolio@localhost:5432/portfolio


on:
  push:
    branches:
      - master

jobs:

  App-Tests:
    runs-on: ubuntu-latest
    services:
        db:
            image: postgres:13
            env:
                POSTGRES_PASSWORD: portfolio
                POSTGRES_USER: portfolio
                POSTGRES_DB: portfolio
            ports:
                - 5432:5432
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        
    steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: '3.11'
        - working-directory: "app"
          run: |
                python -m pip install --upgrade pip
                pip install .

        - name: Run Migrations and Tests
          run: |
                python manage.py migrate
                python manage.py test

        - name: Run Server and Quit
          run: python manage.py runserver &

  App-Build:
    runs-on: ubuntu-latest
    needs: ['App-Tests']
    steps:
      - name: Build Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image and Push
        run: |
              docker build -t portfolio -f ./docker/app/Dockerfile ./app
              docker tag portfolio monyorojoseph/portfolio:latest
              docker push monyorojoseph/portfolio:latest


  # App-Deploy:
  #   runs-on: ubuntu-latest
  #   needs: ['App-Build']

  Deploy-Web:
    runs-on: ubuntu-latest
    needs: ['App-Build']
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
